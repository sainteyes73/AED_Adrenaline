<% include header %>

  <aside class="menu">
    <p class="menu-label">
        AED 리스트
    </p>
  </aside>
     <div class="" id="map" style="width: 100%; height: 650px;"></div>


<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=8a946d5de2f30f417d4252aa4cef341e"></script>
<script type="text/javascript">
$(document).ready(function() {
   if (navigator.geolocation) { // GPS를 지원하면
    navigator.geolocation.getCurrentPosition(function(position) {

      userGeolocation(position);
    }, function(error) {
      console.error(error);
    }, {
      enableHighAccuracy: false,
      maximumAge: 0,
      timeout: Infinity
    });
  } else {
    alert('GPS를 지원하지 않습니다');
  }
});

var browserGeolocationSuccess = function(position) {
    //alert("Browser geolocation success!\n\nlat = " + position.coords.latitude + "\nlng = " + position.coords.longitude);

};
function makeOverListener(map, marker, infowindow) {
    return function() {
        infowindow.open(map, marker);
    };
}

// 인포윈도우를 닫는 클로저를 만드는 함수입니다
function makeOutListener(infowindow) {
    return function() {
        infowindow.close();
    };
}
function getLocation() {
 
}
function userGeolocation(position) {
  $.ajax({
    url: '/nearbyme',
    type: 'post',
    cache: false,
    dataType: 'json',
    data: {'lat': position.coords.latitude, 'lng': position.coords.longitude}, // 내 위치 좌표
    success: function (data) {
      var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
      var options = { //지도를 생성할 때 필요한 기본 옵션
        center: new daum.maps.LatLng(position.coords.latitude, position.coords.longitude), //지도의 중심좌표.
        level: 5 //지도의 레벨(확대, 축소 정도)
      };
      var map = new daum.maps.Map(container, options); //지도 생성 및 객체 리턴
      if (data.result) {
        //console.log(data.item);
        var myItem = JSON.parse(data.item);
        var want= myItem.response.body.items.item;
        for(var i=0; i<want.length; i++){
            var output = '';
            var lat=parseFloat(want[i].wgs84Lat._text);
            var lon= parseFloat(want[i].wgs84Lon._text);
             var markerPosition  = new daum.maps.LatLng(lat, lon);
            // 마커를 생성합니다
            var marker = new daum.maps.Marker({
                map: map, // 마커를 표시할 지도
                position: markerPosition // 마커를 표시할 위치
              });
            var content='<a href="">Button</a>' 
            var infowindow = new daum.maps.InfoWindow({
                content: content, // 인포윈도우에 표시할 내용
                removable : true
            });
            daum.maps.event.addListener(marker, 'click', makeOverListener(map, marker, infowindow));
        }
        /*
          $(data.item).each(function(){
            var lat=$(this).find("wgs84Lat").text();
            var lon=$(this).find("wgs84Lon").text();
            var markerPosition  = new daum.maps.LatLng(lat, lon);
            // 마커를 생성합니다
            var marker = new daum.maps.Marker({
                map: map, // 마커를 표시할 지도
                position: markerPosition // 마커를 표시할 위치
              });
            var content='<a href="">Button</a>' 
            var infowindow = new daum.maps.InfoWindow({
                content: content, // 인포윈도우에 표시할 내용
                removable : true
            });
            daum.maps.event.addListener(marker, 'click', makeOverListener(map, marker, infowindow));
        });
        */
      }
    },
    error: function (request, status, error) {
      console.log(error);
    }
  });
}
function makeOverListener(map, marker, infowindow) {
    return function() {
        infowindow.open(map, marker);
    };
}
// 인포윈도우를 닫는 클로저를 만드는 함수입니다
function makeOutListener(infowindow) {
    return function() {
        infowindow.close();
    };
}
</script>
<% include footer %>