<% include header %>

  <aside class="menu">
    <p class="menu-label">
        AED 리스트
    </p>
  </aside>
     <div class="" id="map" style="width: 100%; height: 650px;"></div>
    <style>
    .wrap .info {width: 380px;height: 120px;border-radius: 5px;border-bottom: 2px solid #ccc;border-right: 1px solid #ccc;overflow: hidden;background: #fff;}
    .wrap .info:nth-child(1) {border: 0;box-shadow: 0px 1px 2px #888;}
    .info .title {padding: 5px 0 0 10px;height: 30px;background: #eee;border-bottom: 1px solid #ddd;font-size: 13px;font-weight: bold;}
    .info .body {position: relative;overflow: hidden;}
    .info .desc {position: relative;margin: 13px 0 0 13px;height: 75px;}
    .desc .ellipsis {overflow: hidden;text-overflow: ellipsis;white-space: nowrap;}
    .desc .jibun {font-size: 11px;color: #888;margin-top: -2px;}
    .info:after {content: '';position: absolute;margin-left: -12px;left: 50%;bottom: 0;width: 22px;height: 12px;background: url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/vertex_white.png')}
    .info .link {color: #5085BB;}
</style>

<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=8a946d5de2f30f417d4252aa4cef341e"></script>
<script type="text/javascript">
var markerPosition;
var markerImage;
var map;
$(document).ready(function() {
   position_move();
});

var browserGeolocationSuccess = function(position) {
    //alert("Browser geolocation success!\n\nlat = " + position.coords.latitude + "\nlng = " + position.coords.longitude);

};
function makeOverListener(map, marker, infowindow) {
    return function() {
        infowindow.open(map, marker);
    };
}

// 인포윈도우를 닫는 클로저를 만드는 함수입니다
function makeOutListener(infowindow) {
    return function() {
        infowindow.close();
    };
}
function getLocation() {

}
function userGeolocation(position,map) {
  $.ajax({
    url: '/nearbyme',
    type: 'post',
    cache: false,
    dataType: 'json',
    data: {'lat': position.coords.latitude, 'lng': position.coords.longitude}, // 내 위치 좌표
    success: function (data) {
      if (data.result) {
        //console.log(data.item);
        var myItem = JSON.parse(data.item);
        var want= myItem.response.body.items.item;
        console.log(want);
        for(var i=0; i<want.length; i++){
            var output = '';
            console.log(want[i]);
            var lat=parseFloat(want[i].wgs84Lat._text);
            var lon= parseFloat(want[i].wgs84Lon._text);
             var markerPosition  = new daum.maps.LatLng(lat, lon);
            // 마커를 생성합니다
            var marker = new daum.maps.Marker({
                map: map, // 마커를 표시할 지도
                position: markerPosition // 마커를 표시할 위치
              });
            var content = '<div class="wrap">' +
                   '    <div class="info">' +
                     '        <div class="title">' +
                         want[i].buildPlace._text  +
            '            <div class="close" onclick="closeOverlay()" title="닫기"></div>' +
            '        </div>' +
            '        <div class="body">' +
            '           </div>' +
            '            <div class="desc">' +
            '                <div class="ellipsis">'+ want[i].buildAddress._text +'</div>' +
            '                <div class="jibun ellipsis">(관리자)'+ want[i].manager._text+'(전화번호)'+want[i].managerTel._text+'</div>' +
            '                <div><a href="	http://map.daum.net/link/to/목적지,'+want[i].wgs84Lat._text+','+want[i].wgs84Lon._text+'"target="_blank" class="link">길찾기</a></div>' +
            '            </div>' +
            '        </div>' +
            '    </div>' +
            '</div>';

            var infowindow = new daum.maps.InfoWindow({
                content: content, // 인포윈도우에 표시할 내용
                removable : true
            });
            daum.maps.event.addListener(marker, 'click', makeOverListener(map, marker, infowindow));
        }
      }
    },
    error: function (request, status, error) {
      console.log(error);
    }
  });
}
function makeOverListener(map, marker, infowindow) {
    return function() {
        infowindow.open(map, marker);
    };
}
// 인포윈도우를 닫는 클로저를 만드는 함수입니다
function makeOutListener(infowindow) {
    return function() {
        infowindow.close();
    };
}
function position_move(){
  if (navigator.geolocation) { // GPS를 지원하면
    navigator.geolocation.getCurrentPosition(function(position) {

      var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
      var options = { //지도를 생성할 때 필요한 기본 옵션
        center: new daum.maps.LatLng(position.coords.latitude, position.coords.longitude), //지도의 중심좌표.
        level: 5 //지도의 레벨(확대, 축소 정도)
      };
      map = new daum.maps.Map(container, options); //지도 생성 및 객체 리턴

      var imageSrc = 'http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png', // 마커이미지의 주소입니다
      imageSize = new daum.maps.Size(32, 34), // 마커이미지의 크기입니다
      imageOption = {offset: new daum.maps.Point(27,69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.
      markerImage = new daum.maps.MarkerImage(imageSrc, imageSize, imageOption);
      markerPosition = new daum.maps.LatLng(position.coords.latitude, position.coords.longitude); // 마커가 표시될 위치입니다

// 마커를 생성합니다
      var marker = new daum.maps.Marker({
          position: markerPosition,
          image: markerImage // 마커이미지 설정
      });
      marker.setMap(map);
      userGeolocation(position,map);
    }, function(error) {
      console.error(error);
    }, {
      enableHighAccuracy: false,
      maximumAge: 0,
      timeout: Infinity
    });
  } else {
    alert('GPS를 지원하지 않습니다');
  }
}
</script>
<% include footer %>
